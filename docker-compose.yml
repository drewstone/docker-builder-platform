version: '3.9'

services:
  postgres:
    image: postgres:16-alpine
    container_name: dbp-postgres
    environment:
      POSTGRES_DB: buildplatform
      POSTGRES_USER: builduser
      POSTGRES_PASSWORD: buildpass123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - buildplatform
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U builduser -d buildplatform"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: dbp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - buildplatform
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: dbp-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      MINIO_DEFAULT_BUCKETS: artifacts,cache,logs
    volumes:
      - minio_data:/data
    networks:
      - buildplatform
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: dbp-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - buildplatform
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    container_name: dbp-grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_INSTALL_PLUGINS: redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - buildplatform
    depends_on:
      - prometheus

  registry:
    image: registry:2
    container_name: dbp-registry
    ports:
      - "5000:5000"
    environment:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry
      REGISTRY_HTTP_ADDR: 0.0.0.0:5000
    volumes:
      - registry_data:/var/lib/registry
    networks:
      - buildplatform

  buildkit:
    image: moby/buildkit:master
    container_name: dbp-buildkit
    privileged: true
    ports:
      - "8080:8080"
    volumes:
      - buildkit_cache:/var/lib/buildkit
      - ./buildkit/buildkitd.toml:/etc/buildkit/buildkitd.toml
    networks:
      - buildplatform
    command: --addr tcp://0.0.0.0:8080

volumes:
  postgres_data:
  redis_data:
  minio_data:
  prometheus_data:
  grafana_data:
  registry_data:
  buildkit_cache:

networks:
  buildplatform:
    driver: bridge